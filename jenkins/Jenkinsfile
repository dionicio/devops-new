pipeline {
  agent any 
     tools { 
        maven 'maven3.9.6'
      }    
    
  stages {
     
    stage('SCM') {
       steps {
             git 'https://github.com/dionicio/devops-new'
             }
           }            

         stage("Package & SonarQube analysis") {
          
            steps {
           
              withSonarQubeEnv('sonar-server') {
                   sh 'mvn clean package sonar:sonar'
                 }
            }
          }
	  stage("Quality Gate") {
		steps {
		  sleep(10)    
		  script{
		  timeout(time: 1, unit: 'HOURS') {
			qualitygate = waitForQualityGate()
			if (qualitygate.status != "OK") {
			   error 'App does not meet quality'
			}  
		  }
		  }
		}
	  } 

      stage('Build') { 
		steps {
	
			 withCredentials([usernamePassword(credentialsId: 'DOCKER_HUB', passwordVariable: 'pass', usernameVariable: 'user')]) {
				withCredentials([string(credentialsId: 'hub_pass', variable: 'passh')]) {
				   sh 'echo $passh'     
				   sh 'mvn compile jib:build -Djib.to.tags=$BUILD_NUMBER -Djib.to.auth.username=$user -Djib.to.auth.password=$passh'
		
			}
		
	 
	  
		 }
	   
		}
        }
      
    stage('Deploy App') {
         steps {
        withKubeCredentials(kubectlCredentials: [[caCertificate: '', clusterName: 'development', contextName: '', credentialsId: 'k8s_token', namespace: 'default', serverUrl: 'https://A66FEFBA5894DABE5B6DD4A634907BC6.gr7.us-east-1.eks.amazonaws.com']]) {
		   
		  sh 'curl -LO "https://storage.googleapis.com/kubernetes-release/release/v1.20.5/bin/linux/amd64/kubectl"'  
		  sh 'chmod u+x ./kubectl'
		  sh './kubectl rollout restart deployment/hello-app'
		  sh './kubectl apply -f k8s/deployment.yaml'
			 
			 }
         }
      }    
    }
  
}